version: '2'
image_name: ansible-chatbot
container_image: ansible-chatbot
apis:
- inference
- vector_io
- safety
- agents
- datasetio
- telemetry
- tool_runtime
providers:
  inference:
  - provider_id: rhosai_vllm_dev
    provider_type: remote::vllm
    config:
      url: ${env.VLLM_URL}
      max_tokens: ${env.VLLM_MAX_TOKENS:4096}
      api_token: ${env.VLLM_API_TOKEN:fake}
      tls_verify: ${env.VLLM_TLS_VERIFY:true}
  - provider_id: inline_sentence-transformer
    provider_type: inline::sentence-transformers
    config: {}
  vector_io:
  - provider_id: aap_faiss
    provider_type: inline::faiss
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: /.llama/data/distributions/ansible-chatbot/aap_faiss_store.db
  safety:
  - provider_id: llama-guard
    provider_type: inline::llama-guard
    config:
      excluded_categories: []
  agents:
  - provider_id: lightspeed_inline_agent
    provider_type: inline::lightspeed_inline_agent
    config:
      persistence_store:
        type: sqlite
        namespace: null
        db_path: /.llama/data/distributions/ansible-chatbot/agents_store.db
      responses_store:
        type: sqlite
        namespace: null
        db_path: /.llama/data/distributions/ansible-chatbot/responses_store.db
      tools_filter:
        enabled: true
        model_id: ${env.INFERENCE_MODEL_FILTER:}
  datasetio:
  - provider_id: localfs
    provider_type: inline::localfs
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: /.llama/data/distributions/ansible-chatbot/localfs_datasetio.db
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: ${env.OTEL_SERVICE_NAME:}
      sinks: ${env.TELEMETRY_SINKS:console,sqlite}
      sqlite_db_path: /.llama/data/distributions/ansible-chatbot/trace_store.db
  tool_runtime:
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
  - provider_id: lightspeed
    provider_type: remote::lightspeed
    config:
      api_key: ${env.AAP_GATEWAY_TOKEN:}
metadata_store: null
models:
- metadata: {}
  model_id: ${env.INFERENCE_MODEL}
  provider_id: rhosai_vllm_dev
  provider_model_id: null
- metadata:
    embedding_dimension: 768
  model_id: ./embeddings_model
  provider_id: inline_sentence-transformer
  model_type: embedding
shields: []
vector_dbs:
- metadata: {}
  vector_db_id: "aap-product-docs-2_5"
  embedding_model: ./embeddings_model
  embedding_dimension: 768
  provider_id: "aap_faiss"
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
  - toolgroup_id: builtin::rag
    provider_id: rag-runtime
logging: null
server:
  port: 8321
  tls_certfile: null
  tls_keyfile: null
  tls_cafile: null
  auth: null
  disable_ipv6: false
external_providers_dir: /.llama/providers.d
