---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ansible-chatbot-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ansible-chatbot-server-env-properties
immutable: false
data:
  INFERENCE_MODEL: "granite-3.3-8b-instruct"
  # TODO: Use Secrets instead.
  VLLM_API_TOKEN: ""
  # TODO: Use Secrets instead.
  VLLM_URL: ""
  # TODO: Use Secrets instead.
  AAP_GATEWAY_TOKEN: ""
  AAP_GATEWAY_URL: ""
  AAP_CONTROLLER_SERVICE_URL: ""
  AAP_LIGHTSPEED_SERVICE_URL: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ansible-chatbot-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ansible-chatbot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ansible-chatbot
    spec:
      imagePullSecrets:
      - name: quay-pull-secret
      initContainers:
        - name: init-rag-vector-db
          image: quay.io/ansible/aap-rag-content:latest
          env:
            - name: LLAMA_STACK_CONFIG_DIR
              value: /.llama/data
          volumeMounts:
            - name: ansible-chatbot-storage
              mountPath: /.llama/data
          command:
            - /rag/entrypoint.sh
      containers:
      - name: ansible-chatbot
        image: ansible-chatbot-stack
        imagePullPolicy: IfNotPresent
        env:
          - name: LLAMA_STACK_CONFIG_DIR
            value: /.llama/data
          - name: EMBEDDING_MODEL
            value: ./embeddings_model
        envFrom:
          - configMapRef:
              name: "ansible-chatbot-server-env-properties"
        ports:
          - containerPort: 8321
        volumeMounts:
          - name: ansible-chatbot-storage
            mountPath: /.llama/data
      - name: ansible-mcp-gateway
        image: ansible-mcp-gateway
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8003
            protocol: TCP
        envFrom:
          - configMapRef:
              name: "ansible-chatbot-server-env-properties"
        env:
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: '8003'
      - name: ansible-mcp-controller
        image: ansible-mcp-controller
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8004
            protocol: TCP
        envFrom:
          - configMapRef:
              name: "ansible-chatbot-server-env-properties"
        env:
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: '8004'
          - name: AAP_SERVICE_URL
            valueFrom:
              configMapKeyRef:
                name: "ansible-chatbot-server-env-properties"
                key: AAP_CONTROLLER_SERVICE_URL
      - name: ansible-mcp-lightspeed
        image: ansible-mcp-lightspeed
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8005
            protocol: TCP
        envFrom:
          - configMapRef:
              name: "ansible-chatbot-server-env-properties"
        env:
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: '8005'
          - name: AAP_SERVICE_URL
            valueFrom:
              configMapKeyRef:
                name: "ansible-chatbot-server-env-properties"
                key: AAP_LIGHTSPEED_SERVICE_URL
      volumes:
      - name: ansible-chatbot-storage
        persistentVolumeClaim:
          claimName: ansible-chatbot-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ansible-chatbot-service
spec:
  selector:
    app.kubernetes.io/name: ansible-chatbot
  ports:
  - protocol: TCP
    port: 8321
    targetPort: 8321
  type: ClusterIP
